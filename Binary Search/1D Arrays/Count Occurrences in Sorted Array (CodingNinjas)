Count Occurrences in Sorted Array (CodingNinjas)
=====================================================================================================================================
//Problem Link  =========>   https://www.codingninjas.com/codestudio/problems/occurrence-of-x-in-a-sorted-array_630456

=====================================================================================================================================

//Problem Statement :
 
You are given a sorted array containing N integers and a number X, you have to find the occurrences of X in the given array.

Example 1:
Input: N = 7,  X = 3 , array[] = {2, 2 , 3 , 3 , 3 , 3 , 4}
Output: 4

Explanation: 3 is occurring 4 times in the given array so it is our answer.

Example 2:
Input: N = 8,  X = 2 , array[] = {1, 1, 2, 2, 2, 2, 2, 3}
Output: 5

Explanation: 2 is occurring 5 times in the given array so it is our answer.
   

=====================================================================================================================================

//CODE —————> TC :  o(logN)  ;    SC : o(1)


public class Solution {
    public static int count(int arr[], int n, int x) {
        
        int a = firstPos(arr , x, n);
        int b=  lastPos(arr, x, n);

        if(a == -1) return 0;        // if there is no first occurence directly we return 0 simply as in our array we dont have that target
        
        return  (b - a +1);  // basic maths ===> last - first + 1
        
    }
    public static int firstPos(int nums[], int x, int n){
        int low = 0;
        int high = n-1;
        int ans = -1;

        while(low <= high){
            int mid = (low + high)/2;

            if(nums[mid] == x){
                ans = mid;
                high = mid -1;
            }
            else if(nums[mid] < x){
                low = mid+1;
            }
            else{
                high = mid - 1;
            }

        }

        return ans;
    }

      public static  int lastPos(int nums[], int x, int n){
        int low = 0;
        int high = n-1;
        int ans = -1;

        while(low <= high){
            int mid = (low + high)/2;

            if(nums[mid] == x){
                ans = mid;
                low = mid+1;
            }
            else if(nums[mid] < x){
                low = mid +1;
            }
            else{
                high = mid - 1;
            }

        }

        return ans;
    }
}

=====================================================================================================================================
