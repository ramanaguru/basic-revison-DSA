Allocate Minimum Number of Pages (Cpding Ninjas)
=====================================================================================================================================
//Problem Link  =========>  https://www.codingninjas.com/studio/problems/allocate-books_1090540

=====================================================================================================================================

//Problem Statement :

Given an array of integers A of size N and an integer B.\
The College library has N bags, the ith book has A[i] number of pages.
You have to allocate books to B number of students so that the maximum number of pages allocated to a student is minimum.

Conditions given :
A book will be allocated to exactly one student.
Each student has to be allocated at least one book.
Allotment should be in contiguous order, for example, A student cannot be allocated book 1 and book 3, skipping book 2.
Calculate and return the minimum possible number. Return -1 if a valid assignment is not possible.

=====================================================================================================================================

//CODE —————> TC :  O(NlogN)          //      Reason: Binary search takes O(log N). For every search, we are checking if an allocation is possible or not. Checking for allocation takes O(N). 
               SC : o(1) ;



import java.util.ArrayList;
import java.util.*;
public class Solution {
    public static int findPages(ArrayList<Integer> arr, int n, int m) {

        int ans = -1;
        
        if(m > arr.size()) return -1;
        
        int low  = arr.get(0);
        int high = 0;

        for(int i = 0; i < arr.size() ; i++){
            low = Math.min(low,arr.get(i));
            high += arr.get(i);
        }

        

        while(low <= high){
            int mid = (low + high)/2;
            
            if(check_Possible(arr, m, mid)){
                ans = mid;
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }

        return ans;
    }

    public static boolean check_Possible(ArrayList<Integer>arr, int m, int pages){
        int students = 1;
        int allocate_PAge = 0;

        for(int i = 0; i < arr.size() ; i++){
            
            
            if(allocate_PAge + arr.get(i) > pages){
                students++;
                allocate_PAge = arr.get(i);

                if(allocate_PAge  > pages || students > m) return false;
                
            }
            else{
                allocate_PAge += arr.get(i);
            }
        }

        return true;
    }
}


=====================================================================================================================================
