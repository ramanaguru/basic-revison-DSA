Allocate Minimum Number of Pages (Cpding Ninjas)
=====================================================================================================================================
//Problem Link  =========>  https://www.codingninjas.com/studio/problems/allocate-books_1090540

=====================================================================================================================================

//Problem Statement :

Given an array of integers A of size N and an integer B.\
The College library has N bags, the ith book has A[i] number of pages.
You have to allocate books to B number of students so that the maximum number of pages allocated to a student is minimum.

Conditions given :
A book will be allocated to exactly one student.
Each student has to be allocated at least one book.
Allotment should be in contiguous order, for example, A student cannot be allocated book 1 and book 3, skipping book 2.
Calculate and return the minimum possible number. Return -1 if a valid assignment is not possible.

=====================================================================================================================================

//CODE —————> TC :  O(NlogN)          //      Reason: Binary search takes O(log N). For every search, we are checking if an allocation is possible or not. Checking for allocation takes O(N). 
               SC : o(1) ;



import java.util.ArrayList;
public class Solution {
    public static int findPages(ArrayList<Integer> arr, int n, int m) {

        //Edge case

       if(m > n){
           return -1; //if given students is greater than array size 
       }  

       //From Observation we came to know that search range is from maxi of the array  to the sum of the array {maxi ==> sum}

       int low  = Integer.MAX_VALUE;
       int high = 0;

        for(int i = 0; i < n; i++){
           low  = Math.min(low, arr.get(i));
           high += arr.get(i);
        }

        int ans = 0;
        while(low <= high){
            int mid = (low + high)/2;

            if(check(arr, mid, m)){ 
                // pass if condition is true
                ans = mid;
                high = mid -1;
            }
            else{
                low = mid + 1;
            }
        }
        return ans;
    }

    public static boolean check(ArrayList<Integer>arr, int pages, int m){
            int student = 1;
            int pageCount = 0;

            // It iterates through the array of pages and checks if it's possible to allocate the pages in a way that doesn't exceed the 

            for(int i = 0; i < arr.size(); i++){
                if(pageCount + arr.get(i) <= pages){
                    pageCount += arr.get(i);
                }
                else{
                    student++;
                    pageCount = arr.get(i);

                    //given pages per student and doesn't exceed the total number of students (m)

                    if(pageCount > pages || student > m){  
                        return false;
                    }

                }
            }

            return true; // if all satisfies return true
    }
}
=====================================================================================================================================
