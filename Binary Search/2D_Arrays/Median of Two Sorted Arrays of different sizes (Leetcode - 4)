Median of Two Sorted Arrays of different sizes (Leetcode - 4)

=========================================================================================================================

Problem Statement: 

Given two sorted arrays arr1 and arr2 of size m and n respectively, return the median of the two sorted arrays. The median is defined as the middle value of a sorted list of numbers. 
In case the length of the list is even, the median is the average of the two middle elements.

=========================================================================================================================

//Tc :  O(log(min(n1,n2)))  ;  Sc : O(1)

//Tc --> where n1 and n2 are the sizes of two given arrays. Reason: We are applying binary search on the range [0, min(n1, n2)].

//CODE 


class Solution {
    public double findMedianSortedArrays(int[] a, int[] b) {
        int n1 = a.length   ,   n2 = b.length;
        //if n1 is greater then swap the arrays because i have to perfom binary serach on smaller size
        if(n1 > n2){
            return findMedianSortedArrays(b , a);
        }

        int n = n1 + n2; // total array
        int left = (n1 + n2 + 1)/2; // length of the left half

        //binary search
        int low = 0 ,  high = n1;
    
        while(low <= high){
            int mid1 = (low + high)/2;
            int mid2 = left - mid; 

            //l1 < r2 && l2 < r1
            int l1 , l2 , r1, r2;

            if(mid1 > 0){
                l1 = a[mid1-1];
            }
            else{
                l1 =Integer.MIN_VALUE;
            }
            if(mid2 > 0){
                l2 = b[mid2-1];
            }
            else{
                l2 =Integer.MIN_VALUE;
            }
            if(mid1 < n1){
                r1 = a[mid1];
            }
            else{
                r1 =Integer.MAX_VALUE;
            }
             if(mid2 < n2){
                r2 = b[mid1];
            }
            else{
                r2 =Integer.MAX_VALUE;
            }

            //if diagonal  check their daigonals
            if(l1 <= r2 && l2 <= r1){
                //two case ==> odd and even 
                if(n % 2 == 1) return Math.max(l1,l2);
                else{
                    return ((double)(Math.max(l1,l2) + Math.min(r1,r2)))/2.0;
                }
            }
            else if(l1 > r2){
                high = mid -1;
            }
            else{
                low = mid + 1;
            }
            
        }
        return 0.0;
    }
}

=========================================================================================================================
