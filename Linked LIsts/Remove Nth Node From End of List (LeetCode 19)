Remove Nth Node From End of List (LeetCode 19)
=====================================================================================================================================
//Problem Link  =========>  https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/

=====================================================================================================================================

//Problem Statement :

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Example 1:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

Example 2:
Input: head = [1], n = 1
Output: []

Example 3:
Input: head = [1,2], n = 1
Output: [1]
   

=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(1)

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
       int size = 0 ;
       if(head == null) return null;
       ListNode temp = head;

        while(temp != null){      
           temp = temp.next;
           size++;
        }

       ListNode ans = head;
        if(size ==1) return null;

       if(size == n || n > size) {return head.next;}

       else{
           int k = size - n;

           for(int i = 1; i < k ; i++){
               head = head.next;
           }

           head.next = head.next.next;
       }

       return ans;
    }
}


=====================================================================================================================================
