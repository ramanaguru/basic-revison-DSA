Reverse Nodes in k-Group (LeetCode 25)
=====================================================================================================================================
//Problem Link  =========>   https://leetcode.com/problems/reverse-nodes-in-k-group/description/

=====================================================================================================================================

//Problem Statement :
  
Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list.
k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is.
You may not alter the values in the list's nodes, only nodes themselves may be changed.


Examples:

Example 1:
Input: head = [1,2,3,4,5], k = 2
Output: [2,1,4,3,5]

Example 2:
Input: head = [1,2,3,4,5], k = 3
Output: [3,2,1,4,5]


=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(1)


class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head == null || k == 1) return head;

        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        
        ListNode prev = dummy;
        ListNode cur  = dummy;
        ListNode nxt  = dummy;

        int len = 0;
        while(cur.next != null){
            cur = cur.next;
            len++;
        }

        while(len >= k){
            cur = prev.next;
            nxt = cur.next;

            for(int i = 1; i < k; i++){
                cur.next  = nxt.next;
                nxt.next  = prev.next;
                prev.next = nxt;
                nxt = cur.next;
            }

            prev = cur;
            len -=k;
        } 

        return dummy.next;
    }
}

=====================================================================================================================================
