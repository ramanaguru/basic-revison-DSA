Find All Annagrams in String (Leetcode - 438)

/TC : O(N)  ; Sc : O(N)

class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        //TwoMaps
        HashMap<Character ,Integer > sMap = new HashMap<>();
        HashMap<Character ,Integer > pMap = new HashMap<>();

        //since we are searching P string in  S string
        //so we are storing P in pmap
        for(char ch : p.toCharArray()){
            pMap.put(ch , pMap.getOrDefault(ch , 0)+1);
        }

        int startIndex = 0;
        ArrayList<Integer> ans = new ArrayList<>();

        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            sMap.put(ch ,sMap.getOrDefault(ch, 0)+1);

            //sliding window Technique remember this 
            //If the map and words equals then add in ANS
            if(i >= p.length() - 1) {
                
                if(sMap.equals(pMap)){
                    ans.add(startIndex);
                }

                char c =s.charAt(startIndex);
                if(sMap.containsKey(c)){                
                    sMap.put(c , sMap.getOrDefault(c, 0)-1);
                    if(sMap.get(c) == 0){
                        sMap.remove(c);
                    }
                }
                startIndex++;
            }
        }

        return ans;
    }
}
