Frequency of element query
=====================================================================================================================================

Problem Description

Given an array A. You have some integers given in the array B.
For the i-th number, find the frequency of B[i] in the array A and return a list containing all the frequencies.


Example Input
Input 1:
A = [1, 2, 1, 1]
B = [1, 2]
Input 2:
A = [2, 5, 9, 2, 8]
B = [3, 2]


Example Output
Output 1:
[3, 1]
Output 2:
[0, 2]

=====================================================================================================================================
TC : o(N)    &&    SC : o(N)
public class Solution {
    public int[] solve(int[] A, int[] B) {
        int n = A.length;
        int m = B.length;

        HashMap<Integer, Integer> hm = new HashMap();

        for(int i = 0; i < n; i++){
            if(!hm.containsKey(A[i])){
                hm.put(A[i], 1);
            }
            else{
                int cnt = hm.get(A[i]) + 1;
                hm.put(A[i],cnt);
            }
        }

        int ans[] = new int[m];
        for(int i = 0 ; i < m; i++){
            if(hm.containsKey(B[i])){
                ans[i] = hm.get(B[i]);
            }
            else{
                ans[i] = 0;
            }
        }

        return ans;

    }
}
