Leaders in an array
=====================================================================================================================================
//Problem Link  =========> https://www.codingninjas.com/codestudio/problems/superior-elements_6783446?leftPanelTab=0
 
=====================================================================================================================================

//Problem Statement :
 
Given an integer array A containing N distinct integers, you have to find all the leaders in array A. An element is a leader if it is strictly greater than all the elements to its right side.

NOTE: The rightmost element is always a leader.

Input 1:
 A = [16, 17, 4, 3, 5, 2]
Input 2:
 A = [5, 4]

Output 1:
[17, 2, 5]

Output 2:
[5, 4]

Explanation 1:

 Element 17 is strictly greater than all the elements on the right side to it.
 Element 2 is strictly greater than all the elements on the right side to it.
 Element 5 is strictly greater than all the elements on the right side to it.
 So we will return these three elements i.e [17, 2, 5], we can also return [2, 5, 17] or [5, 2, 17] or any other ordering.
 
Explanation 2:

 Element 5 is strictly greater than all the elements on the right side to it.
 Element 4 is strictly greater than all the elements on the right side to it.
 So we will return these two elements i.e [5, 4], we can also any other ordering.
   

=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(1)    // if you are considering the output also then it will be o(N)


public class Solution {
    public static List< Integer > superiorElements(int []a) {

        int n = a.length;
        
        List<Integer> res = new ArrayList<>();
        
        int leader = a[n-1];

        res.add(leader);

        for(int i= n-2; i >= 0; i--){
            if(a[i] > leader){
                leader = a[i];
                res.add(leader);
            }
        }

        return res;
        
           
    }
}


=====================================================================================================================================
