Pascal's Triangle(Leetcoede - 118)
=====================================================================================================================================
//Problem Link  =========> https://leetcode.com/problems/pascals-triangle/description/

=====================================================================================================================================

//Problem Statement :

Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:
Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]


Example 2:
Input: numRows = 1
Output: [[1]]
   

=====================================================================================================================================

//CODE —————> TC :  o(N * N)  ;    SC : o(N)


class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<>();
        
        for(int i = 0; i < numRows; i++){
            List<Integer> row = new ArrayList<>();
            row.add(1);

            for(int j = 1; j < i; j++){
                row.add(res.get(i-1).get(j-1) + res.get(i-1).get(j));
            }


            if(i > 0) row.add(1);
            res.add(row);
        }

        return res;
    }
}


=====================================================================================================================================
