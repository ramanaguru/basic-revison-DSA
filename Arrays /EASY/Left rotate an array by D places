Left rotate an array by D places

=====================================================================================================================================
//Problem Link  =========> https://leetcode.com/problems/rotate-array/description/

=====================================================================================================================================
//Problem Statement :

Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]

Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]


Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]


=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(N)
 
 METHOD- 1 : 
 
class Solution {
    public void rotate(int[] nums, int k) {
        if(k > nums.length){
            k= k % nums.length;
        }
            int[]ans =new int[nums.length];
            for(int i=0;i<k;i++){
                ans[i] = nums[nums.length- k + i];
            }
            int j=0;
            for(int i=k;i<nums.length;i++){
                ans[i]=nums[j];
                j++;
            }
            for(int i=0;i<nums.length;i++){
                nums[i]=ans[i];  
            }
        }
    }
    
    
     METHOD - 2:  (Recursion)
     
     
     class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;

        k = k % n;

        reverse(nums, 0, n-1);
        reverse(nums, 0, k-1);
        reverse(nums, k , n-1);

    }
    static void reverse(int arr[], int start, int end) {
        while (start <= end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }    
}
     
     
    

=====================================================================================================================================
