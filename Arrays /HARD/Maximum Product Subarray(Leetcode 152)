Maximum Product Subarray(Leetcode 152)
=====================================================================================================================================
//Problem Link  =========> https://leetcode.com/problems/maximum-product-subarray/

=====================================================================================================================================

//Problem Statement :
  
Given an integer array nums, find a subarray that has the largest product, and return the product.
The test cases are generated so that the answer will fit in a 32-bit integer.

Example 1:
Input: nums = [2,3,-2,4]
Output: 6

Explanation: [2,3] has the largest product 6.

Example 2:
Input: nums = [-2,0,-1]
Output: 0

Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
   

=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(1)


class Solution {
    public int maxProduct(int[] nums) {
        int n = nums.length;
        int prefix = 1;
        int suffix = 1;
        int ans = Integer.MIN_VALUE;

        for(int i = 0; i < n; i++){
            if(prefix == 0) prefix = 1;
            if(suffix == 0) suffix = 1;

            prefix = prefix * nums[i];
            suffix = suffix * nums[n-i-1];


            ans = Math.max(ans, Math.max(prefix, suffix));
        }
        

        return ans;
    }
}

=====================================================================================================================================
