Longest Consecutive Sequence (Leetcoode 128)
=====================================================================================================================================
//Problem Link  =========>  https://leetcode.com/problems/longest-consecutive-sequence/description/

=====================================================================================================================================

//Problem Statement :


Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4

Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.


Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
   

=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(N)     //SC : o(N)  ------> beacuse we are using Hashset

class Solution {
    public int longestConsecutive(int[] nums) {
        int n = nums.length;
        
        HashSet<Integer>hs = new HashSet<>();

        for(int i  = 0; i < n; i++){
            
            hs.add(nums[i]);
            
        }
             
        int ans = 0;

        for(int i = 0 ; i < n; i++){
            if(hs.contains(nums[i] - 1) == false){
                int count = 1;
                int y = nums[i] + 1;
                while(hs.contains(y)){
                    count++;
                    y++;
                }
                ans = Math.max(count, ans);
            }
           
        }

        return ans;
    }
}

=====================================================================================================================================






