Balanced Binary Tree(Leetcode - 110)
=====================================================================================================================================
//Problem Link  =========>  https://leetcode.com/problems/balanced-binary-tree/description/

=====================================================================================================================================

//Problem Statement :
  
 Given a binary tree, determine if it is height-balanced.

Example - 1:
Input: root = [3,9,20,null,null,15,7]
Output: true

Example - 2:
Input: root = [1,2,2,3,3,null,null,4,4]
Output: false


Example 3:
Input: root = []
Output: true


=====================================================================================================================================

//CODE —————> TC :  o(N)  ;    SC : o(1) + o(H) Recursion Stack space (Where “H”  is the height of binary tree)


class Solution {
    public boolean isBalanced(TreeNode root) {
        return dfs(root) != -1;
        
    }

    public int dfs(TreeNode root){
        if(root == null){
            return 0;
        }

        int left = dfs(root.left);
        if(left == -1) return -1;

        int right = dfs(root.right);
        if(right == -1) return -1;

        if(Math.abs(left - right) > 1) return -1;

        return Math.max(left , right) + 1;
    } 
}

=====================================================================================================================================
