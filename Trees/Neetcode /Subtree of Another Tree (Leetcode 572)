Subtree of Another Tree (Leetcode 572)
=====================================================================================================================================
//Problem Link  =========> https://leetcode.com/problems/subtree-of-another-tree/description/

=====================================================================================================================================

//Problem Statement :

Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.
A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.

Example 1:
Input: root = [3,4,5,1,2], subRoot = [4,1,2]
Output: true

Example 2:
Input: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]
Output: false
   

=====================================================================================================================================

//CODE —————> TC :  o(n)  ;    SC : o(Height)

class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {

       if(subRoot == null || isSame(root ,  subRoot)) return true;
       if(root == null) return false;

       return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot);

    }
    
    private boolean isSame(TreeNode p , TreeNode q){
        if( p == null && q == null) return true;
        if(p != null && q == null || p == null && q != null)return false;
        if(p.val == q.val){
            return isSame(p.left, q.left) && isSame(p.right,q.right);
        }

        return false;
    }
}

=====================================================================================================================================
